# syntax=docker/dockerfile:1

############################
# Build Stage
############################
FROM node:24-alpine AS frontend

WORKDIR /app

COPY package.json pnpm-lock.yaml ./
RUN npm install -g pnpm && pnpm install --frozen-lockfile

COPY resources/ resources/
COPY vite.config.* ./
RUN pnpm run build

############################
# Composer Stage
############################
FROM composer:2 AS composer

WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install --no-dev --prefer-dist --no-scripts --no-autoloader

############################
# PHP Base Stage
############################
FROM php:8.4.8-fpm-alpine AS base

# Install system dependencies and PHP extensions
RUN apk add --no-cache \
    bash \
    git \
    icu-dev \
    libzip-dev \
    libpng-dev \
    libjpeg-turbo-dev \
    libwebp-dev \
    libxpm-dev \
    freetype-dev \
    libxml2-dev \
    libpq-dev \
    postgresql-client \
    sqlite-dev \
    imagemagick \
    supervisor \
    curl \
    zlib-dev \
    libsodium-dev \
    && curl -sSL https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions -o /usr/local/bin/install-php-extensions \
    && chmod +x /usr/local/bin/install-php-extensions \
    && install-php-extensions \
        gd \
        pdo \
        pdo_pgsql \
        pdo_sqlite \
        mbstring \
        zip \
        exif \
        pcntl \
        bcmath \
        opcache \
        intl \
        sockets \
        dom \
        xml \
        redis \
        msgpack \
        igbinary \
        swoole \
        imagick

# Copy Composer from previous stage
COPY --from=composer /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/html

# Copy entrypoints and configs
COPY docker/horizon.conf /etc/supervisor/conf.d/horizon.conf
COPY docker/supervisord.conf /etc/supervisord.conf
COPY docker/entrypoint-app.sh /entrypoint-app.sh
COPY docker/entrypoint-horizon.sh /entrypoint-horizon.sh
COPY docker/entrypoint-queue.sh /entrypoint-queue.sh

RUN chmod 644 /etc/supervisord.conf /etc/supervisor/conf.d/horizon.conf \
    && chmod +x /entrypoint-app.sh /entrypoint-horizon.sh /entrypoint-queue.sh \
    && mkdir -p /var/log/supervisor \
    && chown -R www-data:www-data /var/log/supervisor

############################
# Final Stage
############################
FROM base AS production

# Copy application source (only necessary files)
COPY --chown=www-data:www-data . /var/www/html

# Copy built frontend assets from frontend stage
COPY --from=frontend /app/resources/ /var/www/html/resources/
COPY --from=frontend /app/public/build/ /var/www/html/public/build/

# Copy vendor from composer stage
COPY --from=composer /app/vendor /var/www/html/vendor

# Set permissions for storage and cache
RUN mkdir -p storage/logs storage/framework/cache storage/framework/sessions storage/framework/views bootstrap/cache \
    && chown -R www-data:www-data storage bootstrap/cache \
    && chmod -R ug+rwx storage bootstrap/cache

USER www-data

# Optimize Composer autoloader and run Laravel post-install scripts
RUN composer dump-autoload --optimize && \
    php artisan package:discover --ansi

EXPOSE 9000

ENTRYPOINT ["/entrypoint-app.sh"]

# Build with:
# DOCKER_BUILDKIT=1 docker build -f Dockerfile.new -t laravel-12:8.4.8 .
