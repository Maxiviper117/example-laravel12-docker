
services:  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    ports:
      - "9000:9000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    entrypoint: ["/var/www/html/docker-entrypoint.sh"]
    networks:
      - docker-network

  caddy:
    image: caddy:latest
    container_name: laravel_caddy
    ports:
      - "8000:80"
      - "8443:443"
    volumes:
      - .:/var/www/html
      - .:/usr/share/caddy
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - app
    networks:
      - docker-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    container_name: laravel_worker
    restart: unless-stopped
    networks:
      - docker-network
    depends_on:
      - postgres
    command: php artisan queue:work

  postgres:
    image: postgres:17-alpine
    container_name: laravel_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_DATABASE}       # Database name (from Laravel .env)
      - POSTGRES_USER=${DB_USERNAME}     # Database user (from Laravel .env)
      - POSTGRES_PASSWORD=${DB_PASSWORD} # Database password (from Laravel .env)
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - docker-network
      
  redis:
    image: redis:alpine
    container_name: laravel_redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - docker-network
          

volumes:
  postgres_data:

networks:
  docker-network:
    driver: bridge